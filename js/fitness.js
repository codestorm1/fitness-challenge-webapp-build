define("fitness",["jquery","stackmobinit","customCodeClient"],function(e,t,n){return{parseDate:function(e){var t=e.match(/(\d+)/g);return new Date(t[0],t[1]-1,t[2])},showMessage:function(e){alert(e)},log:function(e){console&&typeof console.log=="function"&&console.log(e)},isLoggedIn:function(){return!!this.user},logout:function(){localStorage.removeItem("username"),delete this.user},deleteUser:function(e){var t=this;this.user.destroy({success:function(n){t.logout(),e(!0,n)},error:function(t){e(!1,t)}})},loginWithID:function(e,t){var n=this;if(typeof t!="function")throw"callback is required";if(!e){t(!1);return}var r=new StackMob.User({username:e});r.fetch({success:function(e){n.user=e,t(!0,e)},error:function(e){n.showMessage("Could not retrieve your user data"),t(!1,e)}})},updateFitbitFriends:function(e,t){var r=this;n.getFitbitFriends(e,function(i,s){i?(r.friends=s,s&&n.saveFriendsToStackmob(e,s,function(e,n){e?t(!0,n):(r.showMessage("Failed to save friends"),typeof n=="string"&&console.log(n))})):(r.showMessage("Failed to get fitbit friends"),t(!1,s))})},getInvitations:function(e,t,r){var i=this;if(t&&this.invitations){r(!0,this.invitations);return}n.getChallengeInvites(e,function(e,t){if(!e){i.showMessage("Failed to check for challenge invites"),r(!1,t);return}i.invitations=t,i.invitationLookup=i.invitationLookup||{},_.each(t.models,function(e){i.invitationLookup[e.get("invitation_id")]=e}),r(!0,t)})},updateIfStale:function(e,t){if(typeof t!="function")throw"callback is required";if(this.friends){t(!0);return}var r=this,i=!0;n.getChallengeInvites(e,function(e,n){e||(r.showMessage("Failed to check for challenge invites"),i=!1),r.invitations=n,t(!0,n)})},init:function(){var e=this}}});