var fitness=fitness||{getQueryVariable:function(e,t){var n=e.split("?");if(n.length>1){var r=n[1].split("&");for(var i=0;i<r.length;i++){var s=r[i].split("=");if(s[0]==t)return s[1]}}return null},parseDate:function(e){var t=e.match(/(\d+)/g);return new Date(t[0],t[1]-1,t[2])},getTemplateTarget:function(e){if(e[0])return e.data("target-element")},renderTemplate:function(e,t,n,r){var i=$(e);if(i[0]){var s=Mustache.to_html(i.html(),t||{});if(!r){var o=i.data("target-element");r=$(o)}if(r[0])return n?r.append(s):r.html(s),o}},showMessage:function(e){alert(e)},getNextUserID:function(e){var t=StackMob.Model.extend({schemaName:"user_id_counter"}),n=new t({user_id_counter_id:"1"});n.fetch({success:function(t){t.incrementOnSave("current_id",1),t.save({},{success:function(t){typeof e=="function"&&(t.attributes&&t.attributes.current_id?e(!0,t.attributes.current_id):e(!1))},error:function(t,n){console.debug("Aww...why did you fail on me?! "+n.error),typeof e=="function"&&e(!1)}})},error:function(t,n){console.debug(n),typeof e=="function"&&e(!1)}})},getFitbitRequestToken:function(e,t){StackMob.customcode("fetch_fitbit_request_token",{stackmob_user_id:e},{success:function(e){localStorage.setItem("request_token",e.oauth_token),localStorage.setItem("request_token_secret",e.oauth_token_secret),typeof t=="function"&&t(!0,e)},error:function(e){typeof t=="function"&&t(!1,e)}})},getFitbitAccessToken:function(e,t){var n=this,r=localStorage.getItem("request_token"),i=localStorage.getItem("request_token_secret"),s=this.getQueryVariable(window.location.href,"oauth_verifier"),o=s.length-1;s[o]==="/"&&(s=s.substring(0,o).replace("#",""));var u,t={request_token:r,request_token_secret:i,oauth_verifier:s};StackMob.customcode("fetch_fitbit_access_token",t,"GET",{success:function(r){n.user.accesstoken=r.oauth_token,n.user.accesstokensecret=r.oauth_token_secret,n.user.fitbituserid=r.fitbit_user_id,localStorage.removeItem("request_token"),localStorage.removeItem("request_token_secret"),typeof e=="function"&&e(!0,t,r)},error:function(n){typeof e=="function"&&e(!1,t,n)}})},getFitbitUser:function(e){var t={access_token:this.user.accesstoken,access_token_secret:this.user.accesstokensecret,fitbit_user_id:this.user.fitbituserid};StackMob.customcode("fetch_fitbit_user",t,"GET",{success:function(t){var n=t.userInfoJson,r=JSON.parse(n).user;typeof e=="function"&&e(!0,r)},error:function(t){typeof e=="function"&&e(!1,t)}})},lookupFitnessUser:function(e,t,n){var r=this;if(!e){typeof n=="function"&&n(!1,"email address is required");return}var i=StackMob.Model.extend({schemaName:"user"}),s=StackMob.Collection.extend({model:i}),o=new s,u=new StackMob.Collection.Query;u.equals("email",e),t&&u.equals("fc_password",t),o.query(u,{success:function(e){e.models.length>0&&e.models[0].attributes?typeof n=="function"&&n(!0,e.models[0].attributes):typeof n=="function"&&n(!1,"Could not find user with given email and password")},error:function(e){r.showMessage("query failed trying to get user "+e),console.debug(e),typeof n=="function"&&n(!1,e)}})},createStackmobUser:function(e,t,n){var r=this;this.lookupFitnessUser(e,t,function(i,s){if(i){r.showMessage("That email address is already in use");return}r.getNextUserID(function(r,i){if(r){var s={email:e,password:t,fc_password:t,username:i.toString()},o=new StackMob.User(s);o.create({success:function(e){console.debug("user object is saved"),fitness.user=e.attributes,localStorage.setItem("username",i),n(!0,e)},error:function(e,t){console.debug(t),n(!1,"failed to save user to datastore")}})}else n(!1,"Failed to get next StackMob user ID")})})},updateUserWithParams:function(e,t){delete e.encodedid,$.extend(this.user,e);var n=new StackMob.User({username:this.user.username});n.save(this.user,{success:function(e){console.debug(e.toJSON()),typeof t=="function"&&t(!0,e)},error:function(e,n){console.debug(n),typeof t=="function"&&t(!1,n)}})},getFitbitFriends:function(e,t){var n=this,r;StackMob.customcode("fetch_fitbit_friends",{stackmob_user_id:e},"GET",{success:function(e){r="got friends!<br/>\n";var n=e.friendsJson,i=JSON.parse(n).friends;typeof t=="function"&&t(!0,i)},error:function(e){n.showMessage("failed to get your Fitbit friends"),typeof t=="function"&&t(!1,e)}})},showFriends:function(e){var t="",n=e.length,r;for(var i=0;i<n;i++){r=e[i].user;for(var s in r)t+=s+": "+r[s]+"<br>\n"}$("#results").html(t)},getFriends:function(e){this.user.friends},saveFriendsToStackmob:function(e){var t=fitness,n=[],r=e.length;for(var i=0;i<r;i++){var s=e[i].user;n.push(s.encodedId)}var o=StackMob.Model.extend({schemaName:"user"}),u=StackMob.Collection.extend({model:o}),a=new u,f=new StackMob.Collection.Query;f.mustBeOneOf("fitbituserid",n),a.query(f,{success:function(e){var i=[];if(e.models.length>0&&e.models[0].attributes){r=e.models.length;for(var s=0;s<r;s++){var o=e.models[s].attributes;i.push(o.username)}}var u=new StackMob.User({username:t.user.username}),a={friends:i,friendcount:i.length,fitbitfriendcount:n.length};u.save(a,{success:function(e){console.debug(e.toJSON()),typeof callback=="function"&&callback(!0,e)},error:function(e,t){console.debug(t),typeof callback=="function"&&callback(!1,t)}})},error:function(e){}})},formatDate:function(e){var t=e.getDate(),n=e.getMonth()+1,r=e.getFullYear(),i=n+"/"+t+"/"+r;return i},updateActivities:function(e){var t=new Date,n=new Date(t.getTime()-5184e5),r={stackmob_user_id:this.user.username,start_date:this.formatDate(n),end_date:this.formatDate(t)};StackMob.customcode("update_fitbit_activities",r,{success:function(t){typeof e=="function"&&e(!0,t)},error:function(t){typeof e=="function"&&e(!1,t)}})},completeFitbitAuth:function(){var e=this;this.getFitbitAccessToken(function(t){t?e.user&&e.getFitbitUser(function(t,n){t?(e.user.fitbituserid=n.encodedId,e.updateUserWithParams(n,function(t,n){t?window.location.href="/#home":e.showMessage("failed to update with fitbit info\n "+n.error)})):e.showMessage("failed to get Fitbit User: "+n)}):e.showMessage("failed to get Fitbit access token")})},loginWithID:function(e,t){var n=this;if(e){var r=new StackMob.User({username:e});r.fetch({success:function(e){n.user=e.attributes,typeof t=="function"&&t(!0,e)},error:function(e){n.showMessage("Could not retrieve your user data"),typeof t=="function"&&t(!1,e)}})}},getChallengeInvites:function(e){var t=StackMob.Model.extend({schemaName:"invitation"}),n=StackMob.Collection.extend({model:t}),r=new n,i=new StackMob.Collection.Query;i.equals("inviteduser",this.user.username),i.equals("responded",!1),r.query(i,{success:function(t){var n=t.models.length;if(n===0){typeof e=="function"&&e(!1,t);return}for(var r=0;r<n;r++){var i=t.models[r].attributes,s=StackMob.Model.extend({schemaName:"challenge",challenge_id:i.challenge_id}),o=new s;o.fetch({success:function(e){var t=e.attributes[0];alert("you have a challenge invitation from "+t.challengecreator+"!"),console.debug(e.toJSON())},error:function(e,t){console.debug(t)}})}},error:function(t){that.showMessage("query failed trying to get user "+t),console.debug(t),typeof e=="function"&&e(!1,t)}})},bindEvents:function(){var e=this;$("#register_submit").live("click",function(){var t=$("#register_email").val(),n=$("#new_password").val(),r=$("#confirm_password").val();if(n!==r){e.showMessage("Passwords do not match");return}e.createStackmobUser(t,n,function(t,n){t?window.location.href="/#auth":e.showMessage("Failed to save user:\n"+n)})}),$("#create_challenge_submit").live("click",function(){var t=$("#challenge_type").val(),n=$("#start_date").val(),r=$("#end_date").val(),i=e.parseDate(n),s=e.parseDate(r),o=e.user.username+"_"+t+"_"+n+"_"+r,u=StackMob.Model.extend({schemaName:"challenge"}),a=new u({challenge_id:o,challengetype:t,startdate:i.getTime(),enddate:s.getTime(),challengecreator:e.user.username,users:[e.user.username]});a.create({success:function(t){if(e.user.friends){var n=e.user.friends,r=t.attributes.challenge_id,i=StackMob.Model.extend({schemaName:"invitation"}),s=n.length;for(var u=0;u<s;u++){var a=n[u],f=new i({challenge:o,challengeinviter:e.user.username,inviteduser:a,responded:!1,accepted:!1});f.create({success:function(t){e.showMessage("invitation to "+t.get("inviteduser")+" saved")},error:function(t){e.showMessage("invitation to "+t.get("inviteduser")+" failed")}})}}},error:function(t,n){console.debug("Save challenge failed: "+n.error),n.error.indexOf("Duplicate")!==-1&&e.showMessage("You've already created that challenge"),typeof callback=="function"&&callback(!1)}})}),$(document).bind("mobileinit",function(){$.mobile.ajaxEnabled=!1,$.mobile.linkBindingEnabled=!1,$.mobile.hashListeningEnabled=!1,$.mobile.pushStateEnabled=!1}),$('div[data-role="page"]').live("pagehide",function(e,t){$(e.currentTarget).remove()})},init:function(){var e=this;this.bindEvents(),this.AppRouter=Backbone.Router.extend({routes:{"":"home",home:"home",login:"showLogin",logout:"logout",register:"register",auth:"auth",create:"create"},changePage:function(e){e.render(),$("#main").append($(e.el)),$.mobile.changePage($(e.el),{changeHash:!1})},home:function(){if(!e.user){this.changePage(new e.LoginView);return}this.changePage(new e.HomeView)},showLogin:function(){this.changePage(new e.LoginView)},logout:function(){localStorage.clear(),this.changePage(new e.LoginView)},register:function(){this.changePage(new e.RegisterView)},auth:function(){this.changePage(new e.AuthView)},create:function(){this.changePage(new e.CreateChallengeView)}});var t=new this.AppRouter;Backbone.history.start(),t.navigate()}};$(function(){window.location.href.indexOf("stackmobapp.com")!==-1?StackMob.init({appName:"fitnesschallenge",clientSubdomain:"twistedogregmailcom",publicKey:"eb6421b3-9737-4f0b-97ce-8aebc448739b",apiVersion:2}):StackMob.init({appName:"fitnesschallenge",clientSubdomain:"twistedogregmailcom",publicKey:"ba025b72-92db-4681-9abb-231baca5a94d",apiVersion:0});var e=localStorage.getItem("username");e?fitness.loginWithID(e,function(){fitness.init();return}):fitness.init()});